# NetWiz Docker-in-Docker with Nginx
# This file runs NetWiz with nginx serving both frontend and backend on port 80
# Backend API is available at /api/* and direct backend routes
# Frontend is served at /
# Uses local builds instead of pulling from registry

services:
  nginx:
    # Use custom nginx image with our config
    image: netwiz-nginx:latest
    container_name: netwiz-nginx
    restart: unless-stopped
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Fixed port mapping inside container
    depends_on:
      - backend
      - frontend
    networks:
      - netwiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    # Use local build instead of pulling from registry
    image: netwiz-backend:latest
    container_name: netwiz-backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGODB_USER:-admin}:${MONGODB_PASSWORD:-password}@mongodb:27017/netwiz?authSource=admin
      - MONGODB_DATABASE=netwiz
      - CORS_ORIGINS=*
    depends_on:
      - mongodb
    networks:
      - netwiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0
    container_name: netwiz-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password}
    volumes:
      - ${MONGODB_DATA_PATH:-/data/mongodb}:/data/db
    networks:
      - netwiz-network

  frontend:
    # Use local build instead of pulling from registry
    image: netwiz-frontend:latest
    container_name: netwiz-frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=3000
      - VITE_API_BASE_URL=/api
      - REACT_APP_API_BASE_URL=/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - netwiz-network

volumes:
  mongodb_data:
    external: false

networks:
  netwiz-network:
    driver: bridge
