# NetWiz Backend Environment Configuration
# Copy this file to .env and modify as needed

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
# Environment mode: development, staging, production
ENVIRONMENT=development

# Enable debug mode (true/false)
DEBUG=true

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=0.0.0.0

# Server port
PORT=5000

# Enable auto-reload on code changes (development only)
RELOAD=true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB connection string
# Local: mongodb://localhost:27017/netwiz
# Cloud: mongodb+srv://username:password@cluster.mongodb.net/netwiz
MONGODB_URI=mongodb://localhost:27017/netwiz

# Database name
MONGODB_DATABASE=netwiz

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed origins for CORS (comma-separated)
# Development: http://localhost:3000,http://frontend:3000
# Production: https://yourdomain.com,https://www.yourdomain.com
CORS_ORIGINS=http://localhost:3000,http://frontend:3000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: json, text
LOG_FORMAT=json

# =============================================================================
# API CONFIGURATION
# =============================================================================
# API prefix for all endpoints
API_PREFIX=/api

# Documentation URLs
DOCS_URL=/docs
REDOC_URL=/redoc

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Secret key for JWT tokens (generate a secure random string)
# SECRET_KEY=your-secret-key-here

# JWT token expiration time (in seconds)
# JWT_EXPIRATION=3600

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size for uploads (in bytes)
# MAX_UPLOAD_SIZE=10485760  # 10MB

# Allowed file types for netlist uploads
# ALLOWED_EXTENSIONS=json,txt

# Upload directory
# UPLOAD_DIR=uploads

# =============================================================================
# VALIDATION CONFIGURATION
# =============================================================================
# Enable strict validation mode
# STRICT_VALIDATION=true

# Maximum number of components per netlist
# MAX_COMPONENTS=1000

# Maximum number of nets per netlist
# MAX_NETS=5000

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================
# Redis URL for caching (optional)
# REDIS_URL=redis://localhost:6379/0

# Cache TTL in seconds
# CACHE_TTL=3600

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Enable metrics collection
# ENABLE_METRICS=true

# Prometheus metrics endpoint
# METRICS_URL=/metrics

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Enable SQL query logging
# SQL_DEBUG=false

# Enable request/response logging
# REQUEST_LOGGING=true

# Enable CORS debugging
# CORS_DEBUG=false

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================
# Number of worker processes (for gunicorn)
# WORKERS=4

# Worker class (for gunicorn)
# WORKER_CLASS=uvicorn.workers.UvicornWorker

# Maximum requests per worker before restart
# MAX_REQUESTS=1000

# Maximum requests jitter
# MAX_REQUESTS_JITTER=100

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker container environment
# CONTAINER_ENV=docker

# Docker health check interval
# HEALTH_CHECK_INTERVAL=30

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# Test database URI
# TEST_MONGODB_URI=mongodb://localhost:27017/netwiz_test

# Test environment flag
# TESTING=false

# =============================================================================
# EXAMPLES FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# Development Environment:
# ENVIRONMENT=development
# DEBUG=true
# RELOAD=true
# LOG_LEVEL=DEBUG
# CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Staging Environment:
# ENVIRONMENT=staging
# DEBUG=false
# RELOAD=false
# LOG_LEVEL=INFO
# CORS_ORIGINS=https://staging.yourdomain.com

# Production Environment:
# ENVIRONMENT=production
# DEBUG=false
# RELOAD=false
# LOG_LEVEL=WARNING
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
# WORKERS=4
# MAX_REQUESTS=1000
