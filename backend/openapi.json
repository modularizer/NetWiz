{"openapi":"3.1.0","info":{"title":"PCB Netlist Visualizer + Validator","description":"A proof-of-concept application for visualizing and validating PCB netlist data","version":"1.0.0"},"paths":{"/netlist/upload":{"post":{"tags":["netlist"],"summary":"Upload Netlist","description":"Upload and validate a netlist\n\nThis endpoint accepts a netlist in JSON format, validates it according to business rules,\nand stores it in the database. The validation result is returned immediately.\n\n**Validation Rules:**\n- Component names must not be blank\n- Net names must not be blank\n- All component IDs must be unique\n- All net IDs must be unique\n- GND net must be connected to all relevant components\n- Each net must have at least one connection","operationId":"upload_netlist_netlist_upload_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetlistUploadRequest"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetlistUploadResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/netlist/{submission_id}":{"get":{"tags":["netlist"],"summary":"Get Netlist","description":"Retrieve a specific netlist submission by ID\n\nReturns the complete netlist submission data including the original netlist,\nvalidation results, and metadata.","operationId":"get_netlist_netlist__submission_id__get","parameters":[{"name":"submission_id","in":"path","required":true,"schema":{"type":"string","title":"Submission Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetlistGetResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/netlist":{"get":{"tags":["netlist"],"summary":"List Netlists","description":"List netlist submissions with pagination\n\nReturns a paginated list of netlist submissions. Can be filtered by user ID\nand supports pagination for large result sets.","operationId":"list_netlists_netlist_get","parameters":[{"name":"user_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string","format":"uuid4"},{"type":"null"}],"description":"Filter by user ID","title":"User Id"},"description":"Filter by user ID"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number (1-based)","default":1,"title":"Page"},"description":"Page number (1-based)"},{"name":"page_size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Number of items per page","default":10,"title":"Page Size"},"description":"Number of items per page"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NetlistListResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/netlist/validate":{"post":{"tags":["netlist"],"summary":"Validate Netlist","description":"Validate a netlist without storing it\n\nThis endpoint performs validation on a netlist without storing it in the database.\nUseful for real-time validation in frontend applications.","operationId":"validate_netlist_netlist_validate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/health":{"get":{"tags":["system","health"],"summary":"Health Check","description":"Health check endpoint for monitoring and load balancers\n\nReturns the current status of the API service including version and environment information.\nThis endpoint is used by monitoring systems, load balancers, and health check services.","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}},"/":{"get":{"tags":["system","health"],"summary":"Root","description":"Root endpoint with basic API information\n\nReturns general information about the API including version, author, and available endpoints.\nThis is typically the first endpoint users encounter when exploring the API.","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/info":{"get":{"tags":["system","health"],"summary":"Api Info","description":"Detailed API information endpoint\n\nReturns comprehensive information about the API including all available endpoints,\nversion details, and service capabilities.","operationId":"api_info_info_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/kill":{"post":{"tags":["system","health"],"summary":"Kill Server","description":"Kill the server (development only)\n\nThis endpoint shuts down the server gracefully. Only available in development mode.\nUseful for testing and development workflows.\n\n**WARNING**: This will terminate the server process!","operationId":"kill_server_kill_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/openapi.json":{"get":{"summary":"Get Openapi Schema","description":"Get the OpenAPI schema as JSON\n\nThis endpoint returns the complete OpenAPI 3.0 specification for the API,\nincluding all endpoints, request/response models, and validation rules.","operationId":"get_openapi_schema_openapi_json_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Component-Input":{"properties":{"name":{"type":"string","minLength":1,"title":"Name","description":"Unique component name","examples":["U1","R5","C10","IC1","CONN1"]},"type":{"allOf":[{"$ref":"#/components/schemas/ComponentType"}],"description":"Type of electronic component"},"pins":{"items":{"$ref":"#/components/schemas/Pin"},"type":"array","minItems":1,"title":"Pins","description":"List of pins on this component","examples":[[{"name":"VCC","number":"1"},{"name":"GND","number":"2"}]]},"value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Value","description":"Component value (e.g., '10kΩ', '100nF')","examples":["10kΩ","100nF","3.3V","1MHz","0.1µF"]},"package":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Package","description":"Component package type","examples":["SOIC-8","QFP-32","0603","DIP-14","BGA-256"]},"manufacturer":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Manufacturer","description":"Component manufacturer","examples":["Texas Instruments","STMicroelectronics","Analog Devices"]},"part_number":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Part Number","description":"Manufacturer part number","examples":["LM358","STM32F103C8T6","AD620"]}},"type":"object","required":["name","type","pins"],"title":"Component","description":"Represents an electronic component in the netlist.\n\nA component is a discrete electronic part (resistor, capacitor, IC, etc.)\nthat can be placed on a PCB. Each component has a unique identifier,\na type classification, and a list of pins that define its connection points.\n\nAttributes:\n    id: Unique identifier for the component (e.g., \"U1\", \"R5\", \"C10\")\n    type: Component type from ComponentType enum\n    pins: List of pins on this component (minimum 1 required)\n    value: Optional component value (e.g., \"10kΩ\", \"100nF\", \"3.3V\")\n    package: Optional physical package type (e.g., \"SOIC-8\", \"0603\")\n    manufacturer: Optional manufacturer name (e.g., \"Texas Instruments\")\n    part_number: Optional manufacturer part number (e.g., \"LM358\")\n\nValidation:\n    - Component ID must be non-empty and unique within the netlist\n    - At least one pin is required\n    - All pin numbers must be unique within the component\n\nExample:\n    ```python\n    # Microcontroller\n    mcu = Component(\n        name=\"U1\",\n        type=ComponentType.IC,\n        pins=[\n            Pin(number=\"1\", name=\"VCC\", type=PinType.POWER),\n            Pin(number=\"2\", name=\"GND\", type=PinType.GROUND),\n            Pin(number=\"3\", name=\"CLK\", type=PinType.CLOCK)\n        ],\n        value=\"3.3V\",\n        package=\"QFP-32\",\n        manufacturer=\"STMicroelectronics\",\n        part_number=\"STM32F103C8T6\"\n    )\n\n    # Resistor\n    resistor = Component(\n        name=\"R1\",\n        type=ComponentType.RESISTOR,\n        pins=[Pin(number=\"1\", type=PinType.PASSIVE), Pin(number=\"2\", type=PinType.PASSIVE)],\n        value=\"10kΩ\",\n    )\n    ```","examples":[{"manufacturer":"STMicroelectronics","name":"U1","package":"QFP-32","part_number":"STM32F103C8T6","pins":[{"name":"VCC","number":"1","type":"power"},{"name":"GND","number":"2","type":"ground"},{"name":"CLK","number":"3","type":"clock"}],"type":"IC","value":"3.3V"},{"name":"R1","package":"0603","pins":[{"number":"1"},{"number":"2"}],"type":"RESISTOR","value":"10kΩ"}]},"Component-Output":{"properties":{"name":{"type":"string","minLength":1,"title":"Name","description":"Unique component name","examples":["U1","R5","C10","IC1","CONN1"]},"type":{"allOf":[{"$ref":"#/components/schemas/ComponentType"}],"description":"Type of electronic component"},"pins":{"items":{"$ref":"#/components/schemas/Pin"},"type":"array","minItems":1,"title":"Pins","description":"List of pins on this component","examples":[[{"name":"VCC","number":"1"},{"name":"GND","number":"2"}]]},"value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Value","description":"Component value (e.g., '10kΩ', '100nF')","examples":["10kΩ","100nF","3.3V","1MHz","0.1µF"]},"package":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Package","description":"Component package type","examples":["SOIC-8","QFP-32","0603","DIP-14","BGA-256"]},"manufacturer":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Manufacturer","description":"Component manufacturer","examples":["Texas Instruments","STMicroelectronics","Analog Devices"]},"part_number":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Part Number","description":"Manufacturer part number","examples":["LM358","STM32F103C8T6","AD620"]}},"type":"object","required":["name","type","pins"],"title":"Component","description":"Represents an electronic component in the netlist.\n\nA component is a discrete electronic part (resistor, capacitor, IC, etc.)\nthat can be placed on a PCB. Each component has a unique identifier,\na type classification, and a list of pins that define its connection points.\n\nAttributes:\n    id: Unique identifier for the component (e.g., \"U1\", \"R5\", \"C10\")\n    type: Component type from ComponentType enum\n    pins: List of pins on this component (minimum 1 required)\n    value: Optional component value (e.g., \"10kΩ\", \"100nF\", \"3.3V\")\n    package: Optional physical package type (e.g., \"SOIC-8\", \"0603\")\n    manufacturer: Optional manufacturer name (e.g., \"Texas Instruments\")\n    part_number: Optional manufacturer part number (e.g., \"LM358\")\n\nValidation:\n    - Component ID must be non-empty and unique within the netlist\n    - At least one pin is required\n    - All pin numbers must be unique within the component\n\nExample:\n    ```python\n    # Microcontroller\n    mcu = Component(\n        name=\"U1\",\n        type=ComponentType.IC,\n        pins=[\n            Pin(number=\"1\", name=\"VCC\", type=PinType.POWER),\n            Pin(number=\"2\", name=\"GND\", type=PinType.GROUND),\n            Pin(number=\"3\", name=\"CLK\", type=PinType.CLOCK)\n        ],\n        value=\"3.3V\",\n        package=\"QFP-32\",\n        manufacturer=\"STMicroelectronics\",\n        part_number=\"STM32F103C8T6\"\n    )\n\n    # Resistor\n    resistor = Component(\n        name=\"R1\",\n        type=ComponentType.RESISTOR,\n        pins=[Pin(number=\"1\", type=PinType.PASSIVE), Pin(number=\"2\", type=PinType.PASSIVE)],\n        value=\"10kΩ\",\n    )\n    ```","examples":[{"manufacturer":"STMicroelectronics","name":"U1","package":"QFP-32","part_number":"STM32F103C8T6","pins":[{"name":"VCC","number":"1","type":"power"},{"name":"GND","number":"2","type":"ground"},{"name":"CLK","number":"3","type":"clock"}],"type":"IC","value":"3.3V"},{"name":"R1","package":"0603","pins":[{"number":"1"},{"number":"2"}],"type":"RESISTOR","value":"10kΩ"}]},"ComponentType":{"type":"string","enum":["IC","RESISTOR","CAPACITOR","INDUCTOR","DIODE","TRANSISTOR","CONNECTOR","OTHER"],"title":"ComponentType","description":"Enumeration of electronic component types.\n\nThis enum defines the standard component categories used in PCB netlists.\nEach type represents a different class of electronic components with\ndistinct electrical characteristics and usage patterns.\n\nAttributes:\n    IC: Integrated circuits (microcontrollers, processors, etc.)\n    RESISTOR: Passive components that resist electrical current\n    CAPACITOR: Passive components that store electrical energy\n    INDUCTOR: Passive components that store energy in magnetic fields\n    DIODE: Semiconductor devices that allow current flow in one direction\n    TRANSISTOR: Semiconductor devices for amplification/switching\n    CONNECTOR: Mechanical interfaces for electrical connections\n    OTHER: Components that don't fit standard categories"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HealthResponse":{"properties":{"status":{"type":"string","title":"Status","description":"Service status"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Current timestamp"},"version":{"type":"string","title":"Version","description":"API version"},"environment":{"type":"string","title":"Environment","description":"Environment (development/production)"}},"type":"object","required":["status","timestamp","version","environment"],"title":"HealthResponse","description":"Health check response model"},"Net":{"properties":{"name":{"type":"string","minLength":1,"title":"Name","description":"Unique net name","examples":["VCC","GND","CLK","DATA","RESET","SIGNAL"]},"connections":{"items":{"$ref":"#/components/schemas/NetConnection"},"type":"array","minItems":1,"title":"Connections","description":"List of component pins connected to this net","examples":[[{"component":"U1","pin":"1"},{"component":"R1","pin":"1"}]]},"net_type":{"anyOf":[{"$ref":"#/components/schemas/NetType"},{"type":"null"}],"description":"Type of net (e.g., 'power', 'signal', 'ground')","examples":["power","ground","signal","clock","analog","digital","data","control","other"]}},"type":"object","required":["name","connections"],"title":"Net","description":"Represents an electrical net (connection) in the netlist.\n\nA net is an electrical connection that links multiple component pins together.\nAll pins connected to the same net are electrically equivalent and share\nthe same voltage. Nets form the wiring topology of the circuit.\n\nAttributes:\n    id: Unique identifier for the net (e.g., \"VCC\", \"GND\", \"CLK\", \"DATA\")\n    connections: List of component pins connected to this net\n    net_type: Optional classification of net purpose (e.g., \"power\", \"signal\", \"ground\")\n\nValidation:\n    - Net ID must be non-empty and unique within the netlist\n    - At least one connection is required\n    - All referenced components and pins must exist in the netlist\n\nExample:\n    ```python\n    # Power supply net\n    vcc_net = Net(\n        name=\"VCC\",\n        connections=[\n            NetConnection(component=\"U1\", pin=\"1\"),\n            NetConnection(component=\"U2\", pin=\"1\")\n        ],\n        net_type=\"power\"\n    )\n\n    # Signal net\n    clock_net = Net(\n        name=\"CLK\",\n        connections=[\n            NetConnection(component=\"U1\", pin=\"3\"),\n            NetConnection(component=\"U2\", pin=\"2\")\n        ],\n        net_type=\"signal\"\n    )\n    ```"},"NetConnection":{"properties":{"component":{"type":"string","minLength":1,"title":"Component","description":"Component ID this connection belongs to","examples":["U1","R5","C10","IC1"]},"pin":{"type":"string","minLength":1,"title":"Pin","description":"Pin number on the component","examples":["1","A1","VCC","GND"]}},"type":"object","required":["component","pin"],"title":"NetConnection","description":"Represents a connection between a net and a component pin.\n\nA NetConnection defines how a specific pin on a component is connected\nto a net. This creates the electrical connectivity in the circuit.\nEach connection must reference a valid component ID and pin number.\n\nAttributes:\n    component: ID of the component this connection belongs to\n    pin: Pin number/identifier on the component\n\nValidation:\n    - Both component and pin identifiers must be non-empty\n    - Component ID must exist in the netlist's components\n    - Pin number must exist on the specified component\n\nExample:\n    ```python\n    # Connect pin 1 of component U1 to net VCC\n    connection = NetConnection(component=\"U1\", pin=\"1\")\n\n    # Connect pin A1 of component R5 to net SIGNAL\n    connection = NetConnection(component=\"R5\", pin=\"A1\")\n    ```"},"NetType":{"type":"string","enum":["power","ground","signal","clock","analog","digital","data","control","other"],"title":"NetType","description":"Enumeration of net electrical types and functions.\n\nThis enum defines the electrical characteristics and signal types\nfor nets in the netlist. Each type represents a different electrical\nfunction and usage pattern.\n\nAttributes:\n    POWER: Net provides power supply voltage\n    GROUND: Net provides ground reference\n    SIGNAL: Net carries general purpose signals\n    CLOCK: Net carries clock signals\n    ANALOG: Net carries analog signals\n    DIGITAL: Net carries digital signals\n    DATA: Net carries data signals\n    CONTROL: Net carries control signals\n    OTHER: Net type that doesn't fit standard categories"},"Netlist-Input":{"properties":{"components":{"items":{"$ref":"#/components/schemas/Component-Input"},"type":"array","minItems":1,"title":"Components","description":"List of electronic components in the circuit"},"nets":{"items":{"$ref":"#/components/schemas/Net"},"type":"array","minItems":1,"title":"Nets","description":"List of electrical nets (connections) between components"},"metadata":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Metadata","description":"Optional additional information about the netlist"}},"type":"object","required":["components","nets"],"title":"Netlist","description":"Complete netlist representing an electronic circuit","examples":[{"summary":"Simple MCU Circuit","description":"A basic microcontroller circuit with power and ground","value":{"components":[{"name":"U1","type":"IC","pins":[{"number":"1","name":"VCC","type":"power"},{"number":"2","name":"GND","type":"ground"},{"number":"3","name":"CLK","type":"clock"}],"value":"3.3V","package":"QFP-32","manufacturer":"STMicroelectronics","part_number":"STM32F103C8T6"},{"name":"R1","type":"RESISTOR","pins":[{"number":"1"},{"number":"2"}],"value":"10kΩ","package":"0603"}],"nets":[{"name":"VCC","connections":[{"component":"U1","pin":"1"},{"component":"R1","pin":"1"}],"net_type":"power"},{"name":"GND","connections":[{"component":"U1","pin":"2"},{"component":"R1","pin":"2"}],"net_type":"ground"}],"metadata":{"designer":"John Doe","version":"1.0","description":"Simple MCU circuit with pull-up resistor"}}},{"summary":"Power Supply Circuit","description":"A power supply circuit with voltage regulation","value":{"components":[{"name":"U1","type":"IC","pins":[{"number":"1","name":"VIN","type":"input"},{"number":"2","name":"VOUT","type":"output"},{"number":"3","name":"GND","type":"ground"}],"value":"5V","package":"TO-220","manufacturer":"Linear Technology","part_number":"LM7805"},{"name":"C1","type":"CAPACITOR","pins":[{"number":"1"},{"number":"2"}],"value":"100µF","package":"0805"}],"nets":[{"name":"VIN","connections":[{"component":"U1","pin":"1"},{"component":"C1","pin":"1"}],"net_type":"power"},{"name":"VOUT","connections":[{"component":"U1","pin":"2"}],"net_type":"power"},{"name":"GND","connections":[{"component":"U1","pin":"3"},{"component":"C1","pin":"2"}],"net_type":"ground"}]}}]},"Netlist-Output":{"properties":{"components":{"items":{"$ref":"#/components/schemas/Component-Output"},"type":"array","minItems":1,"title":"Components","description":"List of electronic components in the circuit"},"nets":{"items":{"$ref":"#/components/schemas/Net"},"type":"array","minItems":1,"title":"Nets","description":"List of electrical nets (connections) between components"},"metadata":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Metadata","description":"Optional additional information about the netlist"}},"type":"object","required":["components","nets"],"title":"Netlist","description":"Complete netlist representing an electronic circuit","examples":[{"summary":"Simple MCU Circuit","description":"A basic microcontroller circuit with power and ground","value":{"components":[{"name":"U1","type":"IC","pins":[{"number":"1","name":"VCC","type":"power"},{"number":"2","name":"GND","type":"ground"},{"number":"3","name":"CLK","type":"clock"}],"value":"3.3V","package":"QFP-32","manufacturer":"STMicroelectronics","part_number":"STM32F103C8T6"},{"name":"R1","type":"RESISTOR","pins":[{"number":"1"},{"number":"2"}],"value":"10kΩ","package":"0603"}],"nets":[{"name":"VCC","connections":[{"component":"U1","pin":"1"},{"component":"R1","pin":"1"}],"net_type":"power"},{"name":"GND","connections":[{"component":"U1","pin":"2"},{"component":"R1","pin":"2"}],"net_type":"ground"}],"metadata":{"designer":"John Doe","version":"1.0","description":"Simple MCU circuit with pull-up resistor"}}}]},"NetlistGetResponse":{"properties":{"submission":{"allOf":[{"$ref":"#/components/schemas/NetlistSubmission"}],"description":"The netlist submission data"}},"type":"object","required":["submission"],"title":"NetlistGetResponse","description":"Response model for retrieving a netlist"},"NetlistListResponse":{"properties":{"submissions":{"items":{"$ref":"#/components/schemas/NetlistSubmission"},"type":"array","title":"Submissions","description":"List of netlist submissions"},"total_count":{"type":"integer","title":"Total Count","description":"Total number of submissions"},"page":{"type":"integer","title":"Page","description":"Current page number"},"page_size":{"type":"integer","title":"Page Size","description":"Number of items per page"}},"type":"object","required":["submissions","total_count","page","page_size"],"title":"NetlistListResponse","description":"Response model for listing netlists"},"NetlistSubmission":{"properties":{"id":{"type":"string","format":"uuid4","title":"Id","description":"Unique submission ID"},"netlist":{"allOf":[{"$ref":"#/components/schemas/Netlist-Output"}],"description":"The netlist data"},"user_id":{"anyOf":[{"type":"string","format":"uuid4"},{"type":"null"}],"title":"User Id","description":"User who submitted the netlist"},"submission_timestamp":{"type":"string","format":"date-time","title":"Submission Timestamp","description":"When the netlist was submitted"},"validation_result":{"anyOf":[{"$ref":"#/components/schemas/ValidationResult"},{"type":"null"}],"description":"Validation result for this submission"},"filename":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Filename","description":"Original filename if uploaded from file"}},"type":"object","required":["id","netlist"],"title":"NetlistSubmission","description":"Represents a netlist submission with metadata"},"NetlistUploadRequest":{"properties":{"netlist":{"allOf":[{"$ref":"#/components/schemas/Netlist-Input"}],"description":"The netlist data to upload"},"user_id":{"anyOf":[{"type":"string","format":"uuid4"},{"type":"null"}],"title":"User Id","description":"User ID for tracking submissions"},"filename":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Filename","description":"Original filename if uploaded from file"}},"type":"object","required":["netlist"],"title":"NetlistUploadRequest","description":"Request model for uploading a netlist"},"NetlistUploadResponse":{"properties":{"submission_id":{"type":"string","format":"uuid4","title":"Submission Id","description":"Unique ID for this submission"},"message":{"type":"string","title":"Message","description":"Success message"},"validation_result":{"allOf":[{"$ref":"#/components/schemas/ValidationResult"}],"description":"Validation result for the uploaded netlist"}},"type":"object","required":["submission_id","message","validation_result"],"title":"NetlistUploadResponse","description":"Response model for netlist upload"},"Pin":{"properties":{"number":{"type":"string","minLength":1,"title":"Number","description":"Pin number or identifier (e.g., '1', 'A1', 'VCC')","examples":["1","A1","VCC","GND","CLK"]},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"Optional pin name (e.g., 'VCC', 'GND', 'CLK')","examples":["VCC","GND","CLK","RESET","DATA"]},"type":{"anyOf":[{"$ref":"#/components/schemas/PinType"},{"type":"null"}],"description":"Pin electrical type and function","examples":["input","output","bidirectional","power","ground","passive","analog","digital","clock","reset","other"]}},"type":"object","required":["number"],"title":"Pin","description":"Represents a pin on an electronic component.\n\nA pin is a physical connection point on a component that can be connected\nto nets in the circuit.","examples":[{"name":"VCC","number":"1","type":"power"},{"name":"GND","number":"2","type":"ground"},{"name":"CLK","number":"3","type":"clock"},{"name":"DATA","number":"4","type":"bidirectional"},{"number":"5","type":"passive"}]},"PinType":{"type":"string","enum":["input","output","bidirectional","power","ground","passive","analog","digital","clock","reset","other"],"title":"PinType","description":"Enumeration of pin electrical types and functions.\n\nThis enum defines the electrical characteristics and signal flow direction\nfor component pins. Each type represents a different electrical\nfunction and usage pattern.\n\nAttributes:\n    INPUT: Pin receives signals from external sources\n    OUTPUT: Pin drives signals to external loads\n    BIDIRECTIONAL: Pin can both receive and drive signals\n    POWER: Pin provides power supply voltage\n    GROUND: Pin provides ground reference\n    PASSIVE: Pin for passive components (resistors, capacitors, etc.)\n    ANALOG: Pin for analog signals\n    DIGITAL: Pin for digital signals\n    CLOCK: Pin for clock signals\n    RESET: Pin for reset signals\n    OTHER: Pin type that doesn't fit standard categories"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"ValidationErrorType":{"type":"string","enum":["blank_component_name","blank_net_name","duplicate_component_name","duplicate_net_name","missing_ground","insufficient_gnd_connections","ground_pin_not_connected_to_ground","power_pin_not_connected_to_power","clock_net_single_connection","net_type_name_mismatch","misnamed_ground_net","misnamed_power_net","misnamed_clock_net","orphaned_net","unconnected_component"],"title":"ValidationErrorType","description":"Enumeration of validation error types.\n\nThis enum defines all possible validation error types that can occur\nduring netlist validation. Each error type represents a specific\nvalidation rule that was violated.\n\nAttributes:\n    BLANK_COMPONENT_NAME: Component name is empty or whitespace-only\n    BLANK_NET_NAME: Net name is empty or whitespace-only\n    DUPLICATE_COMPONENT_NAME: Multiple components have the same name\n    DUPLICATE_NET_NAME: Multiple nets have the same name\n    MISSING_GROUND: No ground nets found in the netlist\n    INSUFFICIENT_GND_CONNECTIONS: Ground net has fewer than 2 connections\n    GROUND_PIN_NOT_CONNECTED_TO_GROUND: Pin marked as ground type is not connected to a ground net\n    POWER_PIN_NOT_CONNECTED_TO_POWER: Pin marked as power type is not connected to a power net\n    CLOCK_NET_SINGLE_CONNECTION: Clock net has only one connection (should typically have multiple)\n    NET_TYPE_NAME_MISMATCH: Net type doesn't match net name convention\n    MISNAMED_GROUND_NET: Net named like ground but typed as something else\n    MISNAMED_POWER_NET: Net named like power but typed as something else\n    MISNAMED_CLOCK_NET: Net named like clock but typed as something else\n    ORPHANED_NET: Net has no connections\n    UNCONNECTED_COMPONENT: Component is not connected to any net"},"ValidationRequest":{"properties":{"netlist":{"allOf":[{"$ref":"#/components/schemas/Netlist-Input"}],"description":"The netlist data to validate"}},"type":"object","required":["netlist"],"title":"ValidationRequest","description":"Request model for validating a netlist"},"ValidationResponse":{"properties":{"validation_result":{"allOf":[{"$ref":"#/components/schemas/ValidationResult"}],"description":"The validation result"}},"type":"object","required":["validation_result"],"title":"ValidationResponse","description":"Response model for netlist validation"},"ValidationResult":{"properties":{"is_valid":{"type":"boolean","title":"Is Valid","description":"Whether the netlist passed validation"},"errors":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Errors","description":"List of validation errors"},"warnings":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Warnings","description":"List of validation warnings"},"validation_timestamp":{"type":"string","format":"date-time","title":"Validation Timestamp","description":"When validation was performed"},"validation_rules_applied":{"items":{"$ref":"#/components/schemas/ValidationErrorType"},"type":"array","title":"Validation Rules Applied","description":"List of validation rules that were applied"},"auto_fill_suggestions":{"items":{"additionalProperties":{"type":"string"},"type":"object"},"type":"array","title":"Auto Fill Suggestions","description":"Suggestions for auto-filling missing net types based on names"}},"type":"object","required":["is_valid"],"title":"ValidationResult","description":"Result of netlist validation with errors and warnings","examples":[{"summary":"Valid Netlist","description":"A netlist that passes all validation rules","value":{"is_valid":true,"errors":[],"warnings":[],"validation_timestamp":"2024-01-15T10:30:00Z","validation_rules_applied":["blank_component_name","blank_net_name","duplicate_component_name","duplicate_net_name","missing_ground","insufficient_gnd_connections","ground_pin_not_connected_to_ground","orphaned_net","unconnected_component"]}},{"summary":"Invalid Netlist","description":"A netlist with validation errors","value":{"is_valid":false,"errors":[{"error_type":"duplicate_component_name","message":"Component names must be unique","severity":"error"}],"warnings":[{"error_type":"unconnected_component","message":"Component is not connected to any net","component_id":"R5","severity":"warning"}],"validation_timestamp":"2024-01-15T10:30:00Z","validation_rules_applied":["blank_component_name","blank_net_name","duplicate_component_name","duplicate_net_name"]}}]}}},"tags":[{"name":"netlist","description":"Operations with netlists. Upload, validate, and manage PCB netlist data."},{"name":"health","description":"Health check endpoints for monitoring service status."}]}
