name: Deploy Frontend to GitHub Pages

on:
  workflow_run:
    workflows: ["Build and Push Frontend Container"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  extract-frontend:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract frontend from container
      run: |
        # Pull the built frontend image
        docker pull ghcr.io/modularizer/netwiz-frontend:main

        # Create a temporary container and copy the built files
        CONTAINER_ID=$(docker create ghcr.io/modularizer/netwiz-frontend:main)
        docker cp $CONTAINER_ID:/usr/share/nginx/html ./frontend-dist
        docker rm $CONTAINER_ID

        # Copy version.json if it exists
        if [ -f ./frontend-dist/version.json ]; then
          echo "✅ Found version.json in container"
        else
          echo "⚠️  version.json not found in container"
        fi

    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend-dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: extract-frontend

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
