name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NODE_ENV: production

    - name: Copy public assets manually
      run: |
        cd frontend
        echo "=== Current directory ==="
        pwd
        echo "=== Directory contents ==="
        ls -la
        echo "=== Public directory contents ==="
        ls -la public/ || echo "Public directory not found"
        echo "=== Dist directory contents before copy ==="
        ls -la dist/ || echo "Dist directory not found"
        echo "=== Copying public directory contents ==="
        cp -r public/* dist/ || echo "Copy failed"
        echo "=== Dist directory contents after copy ==="
        ls -la dist/ || echo "Dist directory not found"

    - name: Debug build output
      run: |
        cd frontend
        echo "=== Build output contents ==="
        ls -la dist/
        echo "=== Assets in dist ==="
        ls -la dist/*.svg dist/*.png dist/*.ico 2>/dev/null || echo "No assets found"
        echo "=== Test examples ==="
        ls -la dist/test-examples/ 2>/dev/null || echo "No test-examples found"

    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
